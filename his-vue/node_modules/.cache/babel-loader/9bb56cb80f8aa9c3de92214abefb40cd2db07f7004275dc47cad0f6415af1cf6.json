{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      formData: {\n        doctorName: '',\n        password: ''\n      },\n      formRules: {\n        doctorName: [{\n          required: true,\n          message: '用户名',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '用户名长度不能超过10个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '密码长度不能超过10个字符',\n          trigger: 'blur'\n        }]\n      },\n      currentUser: {},\n      remember: false\n    };\n  },\n  methods: {\n    login() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$http.post('/api/doctor/login', this.formData).then(res => {\n            if (res.data.status == 1) {\n              this.currentUser = res.data.data.currentUser;\n              sessionStorage.setItem(\"currentUser\", JSON.stringify(this.currentUser));\n              const doctorType = res.data.data.doctorType;\n              const deptName = res.data.data.deptName;\n              if (this.remember) {\n                localStorage.setItem(\"loginInfo\", JSON.stringify(this.formData));\n              } else {\n                localStorage.removeItem(\"loginInfo\");\n              }\n              this.$router.push({\n                path: '/home',\n                query: {\n                  doctorType,\n                  deptName\n                }\n              });\n              this.$message.success(res.data.message);\n            } else {\n              this.$message.error(res.data.message);\n            }\n          });\n        }\n      });\n    },\n    reset() {\n      this.formData = {};\n    }\n  },\n  mounted() {\n    if (localStorage.getItem(\"loginInfo\") != null) {\n      this.formData = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    }\n  }\n};","map":{"version":3,"names":["data","formData","doctorName","password","formRules","required","message","trigger","max","currentUser","remember","methods","login","$refs","formRef","validate","valid","$http","post","then","res","status","sessionStorage","setItem","JSON","stringify","doctorType","deptName","localStorage","removeItem","$router","push","path","query","$message","success","error","reset","mounted","getItem","parse"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div id=\"wrap\">\r\n      <div id=\"list\">\r\n        <img src=\"../assets/image/111.jpg\" alt=\"image1\">\r\n        <img src=\"../assets/image/111.jpg\" alt=\"image2\">\r\n        <img src=\"../assets/image/111.jpg\" alt=\"image3\">\r\n        <img src=\"../assets/image/111.jpg\" alt=\"image4\">\r\n        <img src=\"../assets/bg.mp4\" alt=\"image5\">\r\n      </div>\r\n    </div>\r\n\r\n    <el-form :model=\"formData\" :rules=\"formRules\" ref=\"formRef\">\r\n      <h3>用户登录</h3>\r\n      <el-form-item prop=\"doctorName\">\r\n        <el-input v-model=\"formData.doctorName\" placeholder=\"请输入用户姓名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"doctorName\">\r\n        <el-input v-model=\"formData.password\" placeholder=\"请输入密码\"></el-input>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n      <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n  data() {\r\n\r\n    return {\r\n      formData: {\r\n        doctorName: '',\r\n        password: '',\r\n      },\r\n      formRules: {\r\n        doctorName: [\r\n          { required: true, message: '用户名', trigger: 'blur' },\r\n          { max: 10, message: '用户名长度不能超过10个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n          { max: 10, message: '密码长度不能超过10个字符', trigger: 'blur' }\r\n        ],\r\n      },\r\n      currentUser: {},\r\n\r\n      remember: false,\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    login() {\r\n      this.$refs.formRef.validate(\r\n        valid => {\r\n          if (valid) {\r\n            this.$http.post('/api/doctor/login', this.formData).then(\r\n              res => {\r\n                if (res.data.status == 1) {\r\n                  this.currentUser = res.data.data.currentUser\r\n\r\n                  sessionStorage.setItem(\"currentUser\", JSON.stringify(this.currentUser))\r\n                  const doctorType = res.data.data.doctorType\r\n                  const deptName = res.data.data.deptName\r\n                  if (this.remember) {\r\n                    localStorage.setItem(\"loginInfo\", JSON.stringify(this.formData))\r\n                  } else {\r\n                    localStorage.removeItem(\"loginInfo\")\r\n                  }\r\n\r\n                  this.$router.push({ path: '/home', query: { doctorType, deptName } })\r\n                  this.$message.success(res.data.message)\r\n                } else {\r\n                  this.$message.error(res.data.message)\r\n                }\r\n              }\r\n            )\r\n          }\r\n        }\r\n      )\r\n    },\r\n    reset() {\r\n      this.formData = {}\r\n    }\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  mounted() {\r\n    if (localStorage.getItem(\"loginInfo\") != null) {\r\n      this.formData = JSON.parse(localStorage.getItem(\"loginInfo\"))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n  width: 300px;\r\n  margin: 150px auto;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 0px 20px lightgray;\r\n  text-align: center;\r\n}\r\n\r\n#wrap {\r\n  width: 600px;\r\n  height: 400px;\r\n  border: 1px solid #000;\r\n  position: relative;\r\n  margin: 100px auto;\r\n  overflow: hidden;\r\n}\r\n\r\n#list {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  margin: 0;\r\n  padding: 0;\r\n  animation: scroll 20s linear infinite;\r\n}\r\n\r\n#list img {\r\n  float: left;\r\n  width: 200px;\r\n  height: 400px;\r\n}\r\n\r\n@keyframes scroll {\r\n  0% {\r\n    left: 0;\r\n  }\r\n\r\n  20% {\r\n    left: -600px;\r\n  }\r\n\r\n  40% {\r\n    left: -1200px;\r\n  }\r\n\r\n  60% {\r\n    left: -1800px;\r\n  }\r\n\r\n  80% {\r\n    left: -2400px;\r\n  }\r\n\r\n  100% {\r\n    left: -3000px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA4BA;EAEAA,KAAA;IAEA;MACAC,QAAA;QACAC,UAAA;QACAC,QAAA;MACA;MACAC,SAAA;QACAF,UAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,WAAA;MAEAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CACAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,KAAA,CAAAC,IAAA,2BAAAjB,QAAA,EAAAkB,IAAA,CACAC,GAAA;YACA,IAAAA,GAAA,CAAApB,IAAA,CAAAqB,MAAA;cACA,KAAAZ,WAAA,GAAAW,GAAA,CAAApB,IAAA,CAAAA,IAAA,CAAAS,WAAA;cAEAa,cAAA,CAAAC,OAAA,gBAAAC,IAAA,CAAAC,SAAA,MAAAhB,WAAA;cACA,MAAAiB,UAAA,GAAAN,GAAA,CAAApB,IAAA,CAAAA,IAAA,CAAA0B,UAAA;cACA,MAAAC,QAAA,GAAAP,GAAA,CAAApB,IAAA,CAAAA,IAAA,CAAA2B,QAAA;cACA,SAAAjB,QAAA;gBACAkB,YAAA,CAAAL,OAAA,cAAAC,IAAA,CAAAC,SAAA,MAAAxB,QAAA;cACA;gBACA2B,YAAA,CAAAC,UAAA;cACA;cAEA,KAAAC,OAAA,CAAAC,IAAA;gBAAAC,IAAA;gBAAAC,KAAA;kBAAAP,UAAA;kBAAAC;gBAAA;cAAA;cACA,KAAAO,QAAA,CAAAC,OAAA,CAAAf,GAAA,CAAApB,IAAA,CAAAM,OAAA;YACA;cACA,KAAA4B,QAAA,CAAAE,KAAA,CAAAhB,GAAA,CAAApB,IAAA,CAAAM,OAAA;YACA;UACA,CACA;QACA;MACA,CACA;IACA;IACA+B,MAAA;MACA,KAAApC,QAAA;IACA;EAEA;EAKAqC,QAAA;IACA,IAAAV,YAAA,CAAAW,OAAA;MACA,KAAAtC,QAAA,GAAAuB,IAAA,CAAAgB,KAAA,CAAAZ,YAAA,CAAAW,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}