{"ast":null,"code":"import _regeneratorRuntime from \"F:/HIS (source)/his-vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/HIS (source)/his-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nexport default {\n  data: function data() {\n    return {\n      register: this.$route.query.register,\n      speak: '',\n      checkList: [],\n      openDialogFlag: false,\n      queryCondition: {\n        checkName: '',\n        checkCode: ''\n      },\n      checkListDialog: [],\n      checksDialog: []\n    };\n  },\n  methods: {\n    modify: function modify() {\n      var _this = this;\n      var fd = new FormData();\n      fd.append(\"registerId\", this.register.registerId);\n      fd.append(\"speak\", this.speak);\n      this.$http.put(\"/api/register/modify\", fd).then(function (res) {\n        if (res.data.status == 1) {\n          _this.$message.success(res.data.message);\n        } else {\n          _this.$message.error(res.data.message);\n        }\n      });\n    },\n    openDialog: function openDialog() {\n      this.queryCondition.checkName = '';\n      this.queryCondition.checkCode = '';\n      this.openDialogFlag = true;\n      this.getCheckList();\n    },\n    getCheckList: function getCheckList() {\n      var _this2 = this;\n      this.$http.get('/api/check/listAll', {\n        params: this.queryCondition\n      }).then(function (res) {\n        _this2.checkListDialog = res.data.data.checkList;\n      });\n    },\n    clear: function clear() {\n      this.queryCondition.checkName = '';\n      this.queryCondition.checkCode = '';\n      this.checkListDialog = [];\n    },\n    addCheck: function addCheck() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var checkIds, result, fd;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this3.checkList.length == 0)) {\n                _context.next = 3;\n                break;\n              }\n              _this3.$message.error('至少要选择一个检查项目');\n              return _context.abrupt(\"return\");\n            case 3:\n              checkIds = '';\n              _this3.checkList.forEach(function (check) {\n                checkIds += check.checkId + ',';\n              });\n              checkIds = checkIds.substring(0, checkIds.length - 1);\n              _context.next = 8;\n              return _this3.$confirm('是否确认开具检查', '开具确认')[\"catch\"](function () {});\n            case 8:\n              result = _context.sent;\n              if (result == 'confirm') {\n                fd = new FormData();\n                fd.append(\"registerId\", _this3.register.registerId);\n                fd.append(\"checkIds\", checkIds);\n                _this3.$http.post('/api/request/add', fd).then(function (res) {\n                  if (res.data.status == 1) {\n                    _this3.$message.success(res.data.message);\n                    _this3.checkList = [];\n                  } else {\n                    _this3.$message.error(res.data.message);\n                  }\n                });\n              }\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    //将内层检查项目添加到外层\n    addCheckDialog: function addCheckDialog() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this4.$confirm('是否确定添加检查项目', '添加确认');\n            case 2:\n              result = _context2.sent;\n              if (result == 'confirm') {\n                _this4.checksDialog.forEach(function (check) {\n                  var existFlag = false;\n                  _this4.checkList.forEach(function (checkItem) {\n                    if (checkItem.checkId == check.checkId) {\n                      existFlag = true;\n                    }\n                  });\n                  if (!existFlag) {\n                    _this4.checkList.push(check);\n                  }\n                });\n              }\n              _this4.openDialogFlag = false;\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.checksDialog = val;\n    },\n    deleteCheck: function deleteCheck(checkId, checkName) {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var result, index;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this5.$confirm('是否确定删除【' + checkName + '】检查项目', '删除确认');\n            case 2:\n              result = _context3.sent;\n              if (result == 'confirm') {\n                index = _this5.checkList.findIndex(function (check) {\n                  return check.checkId == checkId;\n                });\n                _this5.checkList.splice(index, 1);\n              }\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  },\n  mounted: function mounted() {}\n};","map":{"version":3,"names":["data","register","$route","query","speak","checkList","openDialogFlag","queryCondition","checkName","checkCode","checkListDialog","checksDialog","methods","modify","_this","fd","FormData","append","registerId","$http","put","then","res","status","$message","success","message","error","openDialog","getCheckList","_this2","get","params","clear","addCheck","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","checkIds","result","wrap","_callee$","_context","prev","next","length","abrupt","forEach","check","checkId","substring","$confirm","sent","post","stop","addCheckDialog","_this4","_callee2","_callee2$","_context2","existFlag","checkItem","push","handleSelectionChange","val","deleteCheck","_this5","_callee3","index","_callee3$","_context3","findIndex","splice","mounted"],"sources":["src/views/treat/AddCheck.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!--面包屑导航-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>医生诊疗</el-breadcrumb-item>\r\n            <el-breadcrumb-item>更新病历 开具检查</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <el-card>\r\n\r\n            <el-divider>患者信息</el-divider>\r\n\r\n            <el-tag type=\"primary\">病历号：{{register.registerId}} </el-tag>\r\n            <el-tag type=\"success\">患者姓名：{{register.patientName}} </el-tag>\r\n            <el-tag type=\"warning\">患者性别：{{register.patientGender}} </el-tag>\r\n\r\n            <el-divider>患者主诉</el-divider>\r\n\r\n            <el-input v-model=\"speak\" placeholder=\"患者主诉\" type=\"textarea\" row=\"2\" style=\"width: 800px\"></el-input>\r\n            <el-button type=\"primary\" class=\"button-update\" @click=\"modify\">更新病历</el-button>\r\n\r\n            <el-divider>开局检查</el-divider>\r\n\r\n            <el-button type=\"primary\" @click=\"openDialog\">添加新检查项目</el-button>\r\n\r\n            <el-button type=\"success\" @click=\"addCheck\" class=\"add-button\">开具检查</el-button>\r\n\r\n\r\n            <!--数据表格-->\r\n            <el-table\r\n                    :data=\"checkList\"\r\n                    stripe\r\n                    border\r\n            >\r\n                <el-table-column prop=\"checkName\" label=\"检查项目名称\"/>\r\n                <el-table-column prop=\"checkAmount\" label=\"检查项目费用\"/>\r\n\r\n\r\n                <el-table-column label=\"操作\" align=\"center\">\r\n                    <template slot-scope=\"scope\">\r\n\r\n                        <el-button\r\n                                type=\"danger\" size=\"mini\"\r\n                                @click=\"deleteCheck(scope.row.checkId,scope.row.checkName )\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n\r\n            <!--对话框-->\r\n\r\n            <el-dialog :visible.sync=\"openDialogFlag\" width=\"60%\" center>\r\n\r\n                <!--查询条件-->\r\n                <el-input v-model=\"queryCondition.checkName\" placeholder=\"检查名称\" clearable/>\r\n                <el-input v-model=\"queryCondition.checkCode\" placeholder=\"检查编码\" clearable/>\r\n\r\n                <el-button type=\"primary\" @click=\"getCheckList\">查询</el-button>\r\n\r\n                <el-button type=\"primary\" @click=\"clear\">清空</el-button>\r\n\r\n\r\n                <!--数据表格-->\r\n                <el-table\r\n                        :data=\"checkListDialog\"\r\n                        style=\"width: 80%\"\r\n                        stripe\r\n                        border\r\n                        @selection-change=\"handleSelectionChange\"\r\n                >\r\n                    <el-table-column type=\"selection\"/>\r\n                    <el-table-column prop=\"checkName\" label=\"检查项目名称\"/>\r\n                    <el-table-column prop=\"checkCode\" label=\"检查项目编码\"/>\r\n                    <el-table-column prop=\"checkAmount\" label=\"检查项目费用\"/>\r\n\r\n\r\n                </el-table>\r\n\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"openDialogFlag = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"addCheckDialog\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n\r\n        </el-card>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data(){\r\n            return{\r\n\r\n                register: this.$route.query.register,\r\n\r\n                speak:'',\r\n\r\n                checkList: [],\r\n\r\n                openDialogFlag: false,\r\n\r\n                queryCondition: {\r\n                    checkName:'',\r\n                    checkCode:'',\r\n                },\r\n\r\n                checkListDialog:[],\r\n\r\n                checksDialog:[],\r\n\r\n\r\n            }\r\n        },\r\n\r\n        methods:{\r\n\r\n            modify(){\r\n\r\n                let fd = new FormData();\r\n                fd.append(\"registerId\",this.register.registerId)\r\n                fd.append(\"speak\",this.speak)\r\n\r\n                this.$http.put(\"/api/register/modify\" , fd).then(\r\n\r\n                    res=>{\r\n                        if (res.data.status == 1){\r\n                            this.$message.success(res.data.message)\r\n                        }else {\r\n                            this.$message.error(res.data.message)\r\n                        }\r\n                    }\r\n\r\n                )\r\n\r\n            },\r\n\r\n            openDialog(){\r\n\r\n                this.queryCondition.checkName = ''\r\n                this.queryCondition.checkCode = ''\r\n                this.openDialogFlag = true\r\n\r\n                this.getCheckList()\r\n\r\n            },\r\n\r\n\r\n\r\n            getCheckList(){\r\n\r\n                this.$http.get('/api/check/listAll' , {params: this.queryCondition}).then(\r\n\r\n                    res=>{\r\n                        this.checkListDialog  = res.data.data.checkList\r\n                    }\r\n\r\n                )\r\n\r\n            },\r\n\r\n            clear(){\r\n\r\n                this.queryCondition.checkName = ''\r\n                this.queryCondition.checkCode = ''\r\n\r\n                this.checkListDialog = []\r\n\r\n            },\r\n\r\n            async addCheck(){\r\n\r\n                if (this.checkList.length == 0){\r\n                    this.$message.error('至少要选择一个检查项目')\r\n                    return\r\n                }\r\n\r\n                let checkIds = ''\r\n\r\n                this.checkList.forEach(check =>{\r\n                    checkIds += check.checkId + ','\r\n                })\r\n\r\n                checkIds = checkIds.substring(0,checkIds.length-1)\r\n\r\n\r\n\r\n                const result = await this.$confirm('是否确认开具检查', '开具确认').catch(()=>{})\r\n\r\n                if (result == 'confirm'){\r\n\r\n                    let fd = new FormData();\r\n                    fd.append(\"registerId\",this.register.registerId)\r\n                    fd.append(\"checkIds\",checkIds)\r\n\r\n                    this.$http.post('/api/request/add',fd).then(\r\n                        res=>{\r\n                            if (res.data.status == 1){\r\n                                this.$message.success(res.data.message)\r\n                                this.checkList = []\r\n                            }else {\r\n                                this.$message.error(res.data.message)\r\n                            }\r\n\r\n\r\n                        }\r\n                    )\r\n\r\n                }\r\n\r\n\r\n            },\r\n\r\n            //将内层检查项目添加到外层\r\n            async addCheckDialog(){\r\n\r\n                const result = await this.$confirm('是否确定添加检查项目', '添加确认')\r\n\r\n                if (result == 'confirm'){\r\n                    this.checksDialog.forEach(check =>{\r\n                        let existFlag = false\r\n                        this.checkList.forEach(checkItem =>{\r\n                            if (checkItem.checkId == check.checkId){\r\n                                existFlag = true\r\n                            }\r\n                        })\r\n                        \r\n                        if (!existFlag){\r\n                            this.checkList.push(check)\r\n                        }\r\n                        \r\n                    })\r\n                }\r\n                this.openDialogFlag = false\r\n\r\n            },\r\n\r\n            handleSelectionChange(val){\r\n                this.checksDialog = val\r\n            },\r\n\r\n            async deleteCheck(checkId,checkName){\r\n                const result = await this.$confirm('是否确定删除【' + checkName + '】检查项目','删除确认')\r\n\r\n                if (result == 'confirm'){\r\n                    const  index = this.checkList.findIndex(check=>{\r\n                        return check.checkId == checkId\r\n                    })\r\n\r\n                    this.checkList.splice(index,1)\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        mounted(){\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-tag{\r\n        margin: 10px;\r\n    }\r\n    .button-update{\r\n        margin-left: 20px;\r\n    }\r\n\r\n    .add-button{\r\n        position: absolute;\r\n        right: 223px;\r\n    }\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}