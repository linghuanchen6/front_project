{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.keys.js\";\nexport default {\n  data: function data() {\n    return {\n      formData: {\n        doctorName: '',\n        password: ''\n      },\n      formRules: {\n        doctorName: [{\n          required: true,\n          message: '用户名',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '用户名长度不能超过10个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '密码长度不能超过10个字符',\n          trigger: 'blur'\n        }]\n      },\n      currentUser: {},\n      remember: false\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      this.$refs.formRef.validate(function (valid) {\n        if (valid) {\n          _this.$http.post('/api/doctor/login', _this.formData).then(function (res) {\n            if (res.data.status == 1) {\n              _this.currentUser = res.data.data.currentUser;\n              sessionStorage.setItem(\"currentUser\", JSON.stringify(_this.currentUser));\n              var doctorType = res.data.data.doctorType;\n              var deptName = res.data.data.deptName;\n              if (_this.remember) {\n                localStorage.setItem(\"loginInfo\", JSON.stringify(_this.formData));\n              } else {\n                localStorage.removeItem(\"loginInfo\");\n              }\n              _this.$router.push({\n                path: '/home',\n                query: {\n                  doctorType: doctorType,\n                  deptName: deptName\n                }\n              });\n              _this.$message.success(res.data.message);\n            } else {\n              _this.$message.error(res.data.message);\n            }\n          });\n        }\n      });\n    },\n    reset: function reset() {\n      this.formData = {};\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"loginInfo\") != null) {\n      this.formData = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    }\n  }\n};","map":{"version":3,"names":["data","formData","doctorName","password","formRules","required","message","trigger","max","currentUser","remember","methods","login","_this","$refs","formRef","validate","valid","$http","post","then","res","status","sessionStorage","setItem","JSON","stringify","doctorType","deptName","localStorage","removeItem","$router","push","path","query","$message","success","error","reset","mounted","getItem","parse"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <body>\r\n    <div id=\"cc\"></div>\r\n    <div>\r\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"formRef\">\r\n        <h3>用户登录</h3>\r\n        <el-form-item prop=\"doctorName\">\r\n          <el-input v-model=\"formData.doctorName\" placeholder=\"请输入用户姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"doctorName\">\r\n          <el-input v-model=\"formData.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n        <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n      </el-form>\r\n    </div>\r\n  </body>\r\n</template>\r\n<script>\r\nexport default {\r\n\r\n  data() {\r\n\r\n    return {\r\n      formData: {\r\n        doctorName: '',\r\n        password: '',\r\n      },\r\n      formRules: {\r\n        doctorName: [\r\n          { required: true, message: '用户名', trigger: 'blur' },\r\n          { max: 10, message: '用户名长度不能超过10个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n          { max: 10, message: '密码长度不能超过10个字符', trigger: 'blur' }\r\n        ],\r\n      },\r\n      currentUser: {},\r\n\r\n      remember: false,\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    login() {\r\n      this.$refs.formRef.validate(\r\n        valid => {\r\n          if (valid) {\r\n            this.$http.post('/api/doctor/login', this.formData).then(\r\n              res => {\r\n                if (res.data.status == 1) {\r\n                  this.currentUser = res.data.data.currentUser\r\n\r\n                  sessionStorage.setItem(\"currentUser\", JSON.stringify(this.currentUser))\r\n                  const doctorType = res.data.data.doctorType\r\n                  const deptName = res.data.data.deptName\r\n                  if (this.remember) {\r\n                    localStorage.setItem(\"loginInfo\", JSON.stringify(this.formData))\r\n                  } else {\r\n                    localStorage.removeItem(\"loginInfo\")\r\n                  }\r\n\r\n                  this.$router.push({ path: '/home', query: { doctorType, deptName } })\r\n                  this.$message.success(res.data.message)\r\n                } else {\r\n                  this.$message.error(res.data.message)\r\n                }\r\n              }\r\n            )\r\n          }\r\n        }\r\n      )\r\n    },\r\n    reset() {\r\n      this.formData = {}\r\n    }\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  mounted() {\r\n    if (localStorage.getItem(\"loginInfo\") != null) {\r\n      this.formData = JSON.parse(localStorage.getItem(\"loginInfo\"))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n  width: 300px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 20px lightgray;\r\n  text-align: center;\r\n}\r\n#cc {\r\n  height: 30%;\r\n}\r\n\r\nbody {\r\n  background-image: url(\"../assets/image/1.jpg\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  animation: slideshow 15s infinite;\r\n}\r\n\r\n@keyframes slideshow {\r\n  0% {\r\n    background-image: url(\"../assets/image/2.jpg\");\r\n  }\r\n\r\n  33% {\r\n    background-image: url(\"../assets/image/3.jpg\");\r\n  }\r\n\r\n  66% {\r\n    background-image: url(\"../assets/image/4.jpg\");\r\n  }\r\n\r\n  100% {\r\n    background-image: url(\"../assets/image/1.jpg\");\r\n  }\r\n}</style>\r\n"],"mappings":";;;AAmBA;EAEAA,IAAA,WAAAA,KAAA;IAEA;MACAC,QAAA;QACAC,UAAA;QACAC,QAAA;MACA;MACAC,SAAA;QACAF,UAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,WAAA;MAEAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CACA,UAAAC,KAAA;QACA,IAAAA,KAAA;UACAJ,KAAA,CAAAK,KAAA,CAAAC,IAAA,sBAAAN,KAAA,CAAAZ,QAAA,EAAAmB,IAAA,CACA,UAAAC,GAAA;YACA,IAAAA,GAAA,CAAArB,IAAA,CAAAsB,MAAA;cACAT,KAAA,CAAAJ,WAAA,GAAAY,GAAA,CAAArB,IAAA,CAAAA,IAAA,CAAAS,WAAA;cAEAc,cAAA,CAAAC,OAAA,gBAAAC,IAAA,CAAAC,SAAA,CAAAb,KAAA,CAAAJ,WAAA;cACA,IAAAkB,UAAA,GAAAN,GAAA,CAAArB,IAAA,CAAAA,IAAA,CAAA2B,UAAA;cACA,IAAAC,QAAA,GAAAP,GAAA,CAAArB,IAAA,CAAAA,IAAA,CAAA4B,QAAA;cACA,IAAAf,KAAA,CAAAH,QAAA;gBACAmB,YAAA,CAAAL,OAAA,cAAAC,IAAA,CAAAC,SAAA,CAAAb,KAAA,CAAAZ,QAAA;cACA;gBACA4B,YAAA,CAAAC,UAAA;cACA;cAEAjB,KAAA,CAAAkB,OAAA,CAAAC,IAAA;gBAAAC,IAAA;gBAAAC,KAAA;kBAAAP,UAAA,EAAAA,UAAA;kBAAAC,QAAA,EAAAA;gBAAA;cAAA;cACAf,KAAA,CAAAsB,QAAA,CAAAC,OAAA,CAAAf,GAAA,CAAArB,IAAA,CAAAM,OAAA;YACA;cACAO,KAAA,CAAAsB,QAAA,CAAAE,KAAA,CAAAhB,GAAA,CAAArB,IAAA,CAAAM,OAAA;YACA;UACA,CACA;QACA;MACA,CACA;IACA;IACAgC,KAAA,WAAAA,MAAA;MACA,KAAArC,QAAA;IACA;EAEA;EAKAsC,OAAA,WAAAA,QAAA;IACA,IAAAV,YAAA,CAAAW,OAAA;MACA,KAAAvC,QAAA,GAAAwB,IAAA,CAAAgB,KAAA,CAAAZ,YAAA,CAAAW,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}