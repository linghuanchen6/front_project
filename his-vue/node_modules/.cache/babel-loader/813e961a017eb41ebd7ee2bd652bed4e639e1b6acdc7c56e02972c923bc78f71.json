{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function data() {\n    return {\n      //挂号数据列表\n      registerList: [],\n      //查询条件\n      queryCondition: {\n        registerId: '',\n        //病历号名称\n        patientName: '',\n        //患者名称\n        status: '2' //看诊状态 默认是已接诊的\n      },\n\n      //当前病例对象\n      register: '',\n      //检查结果列表\n      checkResultVOList: [],\n      //是否允许确诊的标志变量\n      enableInsure: false,\n      //控制放大对话框的显示和关闭\n      zoomVisible: false,\n      //检查结果照片路径\n      imageUrl: '',\n      //当前检查项目的名称\n      checkName: ''\n    };\n  },\n  methods: {\n    //查询挂号列表\n    getRegisterList: function getRegisterList() {\n      var _this = this;\n      this.$http.get('/api/register/list', {\n        params: this.queryCondition\n      }).then(function (res) {\n        console.log(res.data.data);\n        _this.registerList = res.data.data.registerList;\n        //将检查状态由int转换成string\n        _this.registerList.forEach(function (register) {\n          if (register.status == 1) {\n            register.status = \"新挂号\";\n          } else if (register.status == 2) {\n            register.status = \"已接诊\";\n          } else {\n            register.status = \"看诊结束\";\n          }\n        });\n      });\n      //禁用确诊按钮\n      this.enableInsure = false;\n    },\n    //查看检查结果列表\n    view: function view(register) {\n      var _this2 = this;\n      this.register = register;\n\n      //发送axios请求\n      this.$http.get('/api/request/view/' + register.registerId).then(function (res) {\n        //接受检查结果列表\n        _this2.checkResultVOList = res.data.data.checkResultVOList;\n        //统计已出结果的检查数量\n        var resultCount = 0;\n        //遍历检查结果列表\n        _this2.checkResultVOList.forEach(function (checkResultVO) {\n          //已出结果的检查数量+1\n          if (checkResultVO.status == 3) {\n            resultCount++;\n          }\n          //添加一个照片文件名的数组\n          checkResultVO.checkPhotos = [];\n          //将检查状态由int转换成string\n          if (checkResultVO.status == 1) {\n            checkResultVO.status = \"未缴费\";\n          } else if (checkResultVO.status == 2) {\n            checkResultVO.status = \"未出结果\";\n          } else {\n            checkResultVO.status = \"已出结果\";\n            //将照片文件名的字符串拆分成数组\n            if (checkResultVO.checkPhoto != '') {\n              checkResultVO.checkPhotos = checkResultVO.checkPhoto.split(\"#\");\n            }\n          }\n        });\n        //只有全部检查结果都已出结果，才能确诊\n        _this2.enableInsure = resultCount == _this2.checkResultVOList.length;\n      });\n    },\n    //放大检查结果图片\n    zoom: function zoom(imageUrl, checkName) {\n      //设置图片的url\n      this.imageUrl = imageUrl;\n      //设置检查项目的名称\n      this.checkName = checkName;\n      //打开对话框\n      this.zoomVisible = true;\n    },\n    //确诊\n    insure: function insure() {\n      //跳转到确诊病例和开具处方页面\n      this.$router.push({\n        path: '/addPrescription',\n        query: {\n          register: this.register\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    //页面加载时，查询数据列表\n    this.getRegisterList();\n  }\n};","map":{"version":3,"names":["data","registerList","queryCondition","registerId","patientName","status","register","checkResultVOList","enableInsure","zoomVisible","imageUrl","checkName","methods","getRegisterList","_this","$http","get","params","then","res","console","log","forEach","view","_this2","resultCount","checkResultVO","checkPhotos","checkPhoto","split","length","zoom","insure","$router","push","path","query","mounted"],"sources":["src/views/treat/Insure.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t\r\n\t\t<!-- 面包屑导航 -->\r\n\t\t<el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n\t\t  <el-breadcrumb-item :to=\"{path: '/'}\">首页</el-breadcrumb-item>\r\n\t\t  <el-breadcrumb-item>医生诊断</el-breadcrumb-item>\r\n\t\t  <el-breadcrumb-item>查看检查结果</el-breadcrumb-item>\r\n\t\t</el-breadcrumb>\r\n\t\t\r\n\t\t<!-- 卡片容器 -->\r\n\t\t<el-card>\r\n\t\t\t\r\n\t\t\t<!--查询条件-->\r\n\t\t\t<el-input v-model=\"queryCondition.registerId\" placeholder=\"请输入病历号\" clearable style=\"width: 200px\"></el-input>\r\n      <el-input v-model=\"queryCondition.patientName\" placeholder=\"请输入患者姓名\" clearable style=\"width: 200px\"></el-input>\r\n\t\t\t<el-select v-model=\"queryCondition.status\" placeholder=\"看诊状态\" style=\"width: 160px;margin-right: 20px\">\r\n\t\t\t\t<el-option label=\"全部状态\" value=\"\"/>\r\n\t\t\t\t<el-option label=\"新挂号\" value=\"1\"/>\r\n\t\t\t\t<el-option label=\"已接诊\" value=\"2\"/>\r\n\t\t\t\t<el-option label=\"看诊结束\" value=\"3\"/>\r\n\t\t\t</el-select>\r\n\t\t\t\r\n\t\t\t<!--查询按钮-->\r\n\t\t\t<el-button type=\"primary\" @click=\"getRegisterList\">查询</el-button>\r\n\t\t\t\r\n\t\t\t<!--确诊按钮-->\r\n\t\t\t<el-button type=\"primary\" class=\"insure-button\" @click=\"insure\" :disabled=\"!enableInsure\">确诊</el-button>\r\n\t\t\t<!-- 挂号数据表格 -->\r\n\t\t\t<el-table :data=\"registerList\" stripe border>\r\n                <el-table-column type=\"index\"  label=\"序号\" width=\"100px\" align=\"center\" />\r\n                <el-table-column prop=\"registerId\" label=\"病历号\"/>\r\n                <el-table-column prop=\"patientName\" label=\"患者姓名\"/>\r\n                <el-table-column prop=\"patientGender\" label=\"患者性别\"/>\r\n\t\t\t\t<el-table-column prop=\"status\" label=\"看诊状态\"/>\r\n\r\n                <el-table-column label=\"操作\" align=\"center\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t\t<!--查看检查结果按钮-->\r\n\t\t\t\t\t\t<el-button type=\"success\" size=\"mini\" @click=\"view(scope.row)\" v-if=\"scope.row.status=='已接诊'\">查看结果</el-button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t    </el-table>\r\n\t\t\t<el-divider>病历号【{{register.registerId}}】的检查结果</el-divider>\r\n\t\t\t<!-- 检查结果数据表格 -->\r\n\t\t\t<el-table :data=\"checkResultVOList\" stripe border>\r\n\t\t\t    <el-table-column type=\"index\"  label=\"序号\" width=\"100px\" align=\"center\" />\r\n\t\t\t\t<el-table-column type=\"expand\">\r\n\t\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t//\t\t<img v-for=\"photo in scope.row.checkPhotos\" :src=\"'/api/image/check/'+photo\" class=\"check-photo\" @click=\"zoomVisible\">\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</el-table-column>\r\n\t\t\t    <el-table-column prop=\"checkName\" label=\"检查名称\" width=\"150\"/>\r\n\t\t\t    <el-table-column prop=\"status\" label=\"检查状态\"width=\"100\"/>\r\n\t\t\t    <el-table-column prop=\"checkResult\" label=\"检查结果\"width=\"300\"/>\r\n\t\t\t\t<el-table-column prop=\"checkTime\" label=\"检查时间\"width=\"200\"/>\r\n\t\t\t    <el-table-column prop=\"doctorName\" label=\"检查医师\"width=\"100\"/>\r\n\t\t\t\t\t\r\n\t\t\t\t</el-table>\r\n\t\t\t\t<!--放大检查结果插片的对话框-->\r\n\t\t\t\t<el-dialog :title=\"'【'+checkName+'】检查结果照片'\" :visible.sync=\"zoomVisible\" width=\"50%\">\r\n\t\t\t\t\t<img :src=\"imageUrl\" width=\"100%\"/>\r\n\t\t\t\t</el-dialog>\r\n\t\t</el-card>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\r\n        data() {\r\n           return{\r\n\t\t\t\r\n\t\t\t//挂号数据列表\r\n\t\t\t\t\tregisterList:[],\t\r\n\t\t\t\t\t//查询条件\r\n\t\t\t\t\tqueryCondition:{\t\t\t\t\t\t\r\n\t\t\t\t\t\tregisterId:'',\t//病历号名称\r\n\t\t\t\t\t\tpatientName:'',//患者名称\r\n\t\t\t\t\t\tstatus:'2', //看诊状态 默认是已接诊的\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t//当前病例对象\r\n\t\t\t\t\tregister:'',\r\n\t\t\t\t\t//检查结果列表\r\n\t\t\t\t\tcheckResultVOList:[],\r\n\t\t\t\t\t//是否允许确诊的标志变量\r\n\t\t\t\t\tenableInsure:false,\r\n\t\t\t\t\t//控制放大对话框的显示和关闭\r\n\t\t\t\t\tzoomVisible:false,\r\n\t\t\t\t\t//检查结果照片路径\r\n\t\t\t\t\timageUrl:'',\r\n\t\t\t\t\t//当前检查项目的名称\r\n\t\t\t\t\tcheckName:'',\r\n\t\t\t   \r\n\t\t   }\r\n\t\t   \r\n\t},\t\r\n\r\n        methods: {\r\n          //查询挂号列表\r\n          getRegisterList() {\r\n              this.$http.get('/api/register/list', {params:this.queryCondition}).then(\r\n                  res => {\r\n                    console.log(res.data.data)\r\n                      this.registerList = res.data.data.registerList\r\n                  //将检查状态由int转换成string\r\n                      this.registerList.forEach(register=>{\r\n                        if(register.status==1){\r\n                          register.status=\"新挂号\";\r\n                        }else if(register.status==2){\r\n                          register.status=\"已接诊\";\r\n                        }else{\r\n                          register.status=\"看诊结束\";\r\n                        }\r\n                      })\r\n                  }\r\n              )\r\n\t\t\t\t      //禁用确诊按钮\r\n\t\t\t\t      this.enableInsure=false\r\n            },\r\n          //查看检查结果列表\r\n          view(register) {\r\n\r\n\t\t\t      this.register=register;\r\n\r\n\t\t\t      //发送axios请求\r\n             this.$http.get('/api/request/view/'+ register.registerId).then(\r\n                 res => {\r\n\t\t\t\t\t  //接受检查结果列表\r\n                 this.checkResultVOList = res.data.data.checkResultVOList\r\n                 //统计已出结果的检查数量\r\n                 let resultCount=0\r\n                 //遍历检查结果列表\r\n                   this.checkResultVOList.forEach(checkResultVO=>{\r\n                 //已出结果的检查数量+1\r\n                 if(checkResultVO.status==3){\r\n                   resultCount++\r\n                 }\r\n                 //添加一个照片文件名的数组\r\n                 checkResultVO.checkPhotos=[]\r\n                 //将检查状态由int转换成string\r\n                 if(checkResultVO.status==1){\r\n                  checkResultVO.status=\"未缴费\"\r\n                 }else if(checkResultVO.status==2){\r\n                  checkResultVO.status=\"未出结果\"\r\n                 }else{\r\n                  checkResultVO.status=\"已出结果\"\r\n                  //将照片文件名的字符串拆分成数组\r\n                  if(checkResultVO.checkPhoto!=''){\r\n                    checkResultVO.checkPhotos=checkResultVO.checkPhoto.split(\"#\")\r\n                  }\r\n                 }\r\n               })\r\n         \t\t\t//只有全部检查结果都已出结果，才能确诊\r\n         \t\t\tthis.enableInsure= (resultCount==this.checkResultVOList.length)\r\n                 }\r\n             )\r\n         }, \r\n           //放大检查结果图片\r\n\t\t\tzoom(imageUrl,checkName){\r\n\t\t\t\t//设置图片的url\r\n\t\t\t\tthis.imageUrl=imageUrl\r\n\t\t\t\t//设置检查项目的名称\r\n\t\t\t\tthis.checkName=checkName\r\n\t\t\t\t//打开对话框\r\n\t\t\t\tthis.zoomVisible=true\r\n\t\t\t},\r\n\t\t\t//确诊\r\n\t\t\tinsure(){\r\n\t\t\t\t//跳转到确诊病例和开具处方页面\r\n\t\t\t\tthis.$router.push({path:'/addPrescription',query:{register:this.register}})\r\n\t\t\t},\r\n        },\r\n        mounted() {\r\n         //页面加载时，查询数据列表\r\n\t\t       this.getRegisterList();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .check-photo{\r\n       width: 100px;\r\n\t   cursor: pointer;\r\n\t   margin-right: 20px;\r\n    }\r\n\t.insure-button{\r\n\t\tposition: absolute;\r\n\t\tright: 90px;\r\n\t}\r\n</style>\r\n"],"mappings":";;;;AAsEA;EAEAA,IAAA,WAAAA,KAAA;IACA;MAEA;MACAC,YAAA;MACA;MACAC,cAAA;QACAC,UAAA;QAAA;QACAC,WAAA;QAAA;QACAC,MAAA;MACA;;MAEA;MACAC,QAAA;MACA;MACAC,iBAAA;MACA;MACAC,YAAA;MACA;MACAC,WAAA;MACA;MACAC,QAAA;MACA;MACAC,SAAA;IAEA;EAEA;EAEAC,OAAA;IACA;IACAC,eAAA,WAAAA,gBAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,KAAA,CAAAC,GAAA;QAAAC,MAAA,OAAAf;MAAA,GAAAgB,IAAA,CACA,UAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAnB,IAAA,CAAAA,IAAA;QACAc,KAAA,CAAAb,YAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAC,YAAA;QACA;QACAa,KAAA,CAAAb,YAAA,CAAAqB,OAAA,WAAAhB,QAAA;UACA,IAAAA,QAAA,CAAAD,MAAA;YACAC,QAAA,CAAAD,MAAA;UACA,WAAAC,QAAA,CAAAD,MAAA;YACAC,QAAA,CAAAD,MAAA;UACA;YACAC,QAAA,CAAAD,MAAA;UACA;QACA;MACA,CACA;MACA;MACA,KAAAG,YAAA;IACA;IACA;IACAe,IAAA,WAAAA,KAAAjB,QAAA;MAAA,IAAAkB,MAAA;MAEA,KAAAlB,QAAA,GAAAA,QAAA;;MAEA;MACA,KAAAS,KAAA,CAAAC,GAAA,wBAAAV,QAAA,CAAAH,UAAA,EAAAe,IAAA,CACA,UAAAC,GAAA;QACA;QACAK,MAAA,CAAAjB,iBAAA,GAAAY,GAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAAO,iBAAA;QACA;QACA,IAAAkB,WAAA;QACA;QACAD,MAAA,CAAAjB,iBAAA,CAAAe,OAAA,WAAAI,aAAA;UACA;UACA,IAAAA,aAAA,CAAArB,MAAA;YACAoB,WAAA;UACA;UACA;UACAC,aAAA,CAAAC,WAAA;UACA;UACA,IAAAD,aAAA,CAAArB,MAAA;YACAqB,aAAA,CAAArB,MAAA;UACA,WAAAqB,aAAA,CAAArB,MAAA;YACAqB,aAAA,CAAArB,MAAA;UACA;YACAqB,aAAA,CAAArB,MAAA;YACA;YACA,IAAAqB,aAAA,CAAAE,UAAA;cACAF,aAAA,CAAAC,WAAA,GAAAD,aAAA,CAAAE,UAAA,CAAAC,KAAA;YACA;UACA;QACA;QACA;QACAL,MAAA,CAAAhB,YAAA,GAAAiB,WAAA,IAAAD,MAAA,CAAAjB,iBAAA,CAAAuB,MAAA;MACA,CACA;IACA;IACA;IACAC,IAAA,WAAAA,KAAArB,QAAA,EAAAC,SAAA;MACA;MACA,KAAAD,QAAA,GAAAA,QAAA;MACA;MACA,KAAAC,SAAA,GAAAA,SAAA;MACA;MACA,KAAAF,WAAA;IACA;IACA;IACAuB,MAAA,WAAAA,OAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAA9B,QAAA,OAAAA;QAAA;MAAA;IACA;EACA;EACA+B,OAAA,WAAAA,QAAA;IACA;IACA,KAAAxB,eAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}