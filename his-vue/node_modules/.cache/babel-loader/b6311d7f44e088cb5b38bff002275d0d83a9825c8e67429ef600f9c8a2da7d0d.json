{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      register: this.$route.query.register,\n      speak: '',\n      checkList: [],\n      openDialogFlag: false,\n      queryCondition: {\n        checkName: '',\n        checkCode: ''\n      },\n      checkListDialog: [],\n      checksDialog: []\n    };\n  },\n  methods: {\n    modify() {\n      let fd = new FormData();\n      fd.append(\"registerId\", this.register.registerId);\n      fd.append(\"speak\", this.speak);\n      this.$http.put(\"/api/register/modify\", fd).then(res => {\n        if (res.data.status == 1) {\n          this.$message.success(res.data.message);\n        } else {\n          this.$message.error(res.data.message);\n        }\n      });\n    },\n    openDialog() {\n      this.queryCondition.checkName = '';\n      this.queryCondition.checkCode = '';\n      this.openDialogFlag = true;\n      this.getCheckList();\n    },\n    getCheckList() {\n      this.$http.get('/api/check/listAll', {\n        params: this.queryCondition\n      }).then(res => {\n        this.checkListDialog = res.data.data.checkList;\n      });\n    },\n    clear() {\n      this.queryCondition.checkName = '';\n      this.queryCondition.checkCode = '';\n      this.checkListDialog = [];\n    },\n    async addCheck() {\n      if (this.checkList.length == 0) {\n        this.$message.error('至少要选择一个检查项目');\n        return;\n      }\n      let checkIds = '';\n      this.checkList.forEach(check => {\n        checkIds += check.checkId + ',';\n      });\n      checkIds = checkIds.substring(0, checkIds.length - 1);\n      const result = await this.$confirm('是否确认开具检查', '开具确认').catch(() => {});\n      if (result == 'confirm') {\n        let fd = new FormData();\n        fd.append(\"registerId\", this.register.registerId);\n        fd.append(\"checkIds\", checkIds);\n        this.$http.post('/api/request/add', fd).then(res => {\n          if (res.data.status == 1) {\n            this.$message.success(res.data.message);\n            this.checkList = [];\n          } else {\n            this.$message.error(res.data.message);\n          }\n        });\n      }\n    },\n    //将内层检查项目添加到外层\n    async addCheckDialog() {\n      const result = await this.$confirm('是否确定添加检查项目', '添加确认');\n      if (result == 'confirm') {\n        this.checksDialog.forEach(check => {\n          let existFlag = false;\n          this.checkList.forEach(checkItem => {\n            if (checkItem.checkId == check.checkId) {\n              existFlag = true;\n            }\n          });\n          if (!existFlag) {\n            this.checkList.push(check);\n          }\n        });\n      }\n      this.openDialogFlag = false;\n    },\n    handleSelectionChange(val) {\n      this.checksDialog = val;\n    },\n    async deleteCheck(checkId, checkName) {\n      const result = await this.$confirm('是否确定删除【' + checkName + '】检查项目', '删除确认');\n      if (result == 'confirm') {\n        const index = this.checkList.findIndex(check => {\n          return check.checkId == checkId;\n        });\n        this.checkList.splice(index, 1);\n      }\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["data","register","$route","query","speak","checkList","openDialogFlag","queryCondition","checkName","checkCode","checkListDialog","checksDialog","methods","modify","fd","FormData","append","registerId","$http","put","then","res","status","$message","success","message","error","openDialog","getCheckList","get","params","clear","addCheck","length","checkIds","forEach","check","checkId","substring","result","$confirm","catch","post","addCheckDialog","existFlag","checkItem","push","handleSelectionChange","val","deleteCheck","index","findIndex","splice","mounted"],"sources":["src/views/treat/AddCheck.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!--面包屑导航-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>医生诊疗</el-breadcrumb-item>\r\n            <el-breadcrumb-item>更新病历 开具检查</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <el-card>\r\n\r\n            <el-divider>患者信息</el-divider>\r\n\r\n            <el-tag type=\"primary\">病历号：{{register.registerId}} </el-tag>\r\n            <el-tag type=\"success\">患者姓名：{{register.patientName}} </el-tag>\r\n            <el-tag type=\"warning\">患者性别：{{register.patientGender}} </el-tag>\r\n\r\n            <el-divider>患者主诉</el-divider>\r\n\r\n            <el-input v-model=\"speak\" placeholder=\"患者主诉\" type=\"textarea\" row=\"2\" style=\"width: 800px\"></el-input>\r\n            <el-button type=\"primary\" class=\"button-update\" @click=\"modify\">更新病历</el-button>\r\n\r\n            <el-divider>开局检查</el-divider>\r\n\r\n            <el-button type=\"primary\" @click=\"openDialog\">添加新检查项目</el-button>\r\n\r\n            <el-button type=\"success\" @click=\"addCheck\" class=\"add-button\">开具检查</el-button>\r\n\r\n\r\n            <!--数据表格-->\r\n            <el-table\r\n                    :data=\"checkList\"\r\n                    stripe\r\n                    border\r\n            >\r\n                <el-table-column prop=\"checkName\" label=\"检查项目名称\"/>\r\n                <el-table-column prop=\"checkAmount\" label=\"检查项目费用\"/>\r\n\r\n\r\n                <el-table-column label=\"操作\" align=\"center\">\r\n                    <template slot-scope=\"scope\">\r\n\r\n                        <el-button\r\n                                type=\"danger\" size=\"mini\"\r\n                                @click=\"deleteCheck(scope.row.checkId,scope.row.checkName )\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n\r\n            <!--对话框-->\r\n\r\n            <el-dialog :visible.sync=\"openDialogFlag\" width=\"60%\" center>\r\n\r\n                <!--查询条件-->\r\n                <el-input v-model=\"queryCondition.checkName\" placeholder=\"检查名称\" clearable/>\r\n                <el-input v-model=\"queryCondition.checkCode\" placeholder=\"检查编码\" clearable/>\r\n\r\n                <el-button type=\"primary\" @click=\"getCheckList\">查询</el-button>\r\n\r\n                <el-button type=\"primary\" @click=\"clear\">清空</el-button>\r\n\r\n\r\n                <!--数据表格-->\r\n                <el-table\r\n                        :data=\"checkListDialog\"\r\n                        style=\"width: 80%\"\r\n                        stripe\r\n                        border\r\n                        @selection-change=\"handleSelectionChange\"\r\n                >\r\n                    <el-table-column type=\"selection\"/>\r\n                    <el-table-column prop=\"checkName\" label=\"检查项目名称\"/>\r\n                    <el-table-column prop=\"checkCode\" label=\"检查项目编码\"/>\r\n                    <el-table-column prop=\"checkAmount\" label=\"检查项目费用\"/>\r\n\r\n\r\n                </el-table>\r\n\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"openDialogFlag = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"addCheckDialog\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n\r\n        </el-card>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data(){\r\n            return{\r\n\r\n                register: this.$route.query.register,\r\n\r\n                speak:'',\r\n\r\n                checkList: [],\r\n\r\n                openDialogFlag: false,\r\n\r\n                queryCondition: {\r\n                    checkName:'',\r\n                    checkCode:'',\r\n                },\r\n\r\n                checkListDialog:[],\r\n\r\n                checksDialog:[],\r\n\r\n\r\n            }\r\n        },\r\n\r\n        methods:{\r\n\r\n            modify(){\r\n\r\n                let fd = new FormData();\r\n                fd.append(\"registerId\",this.register.registerId)\r\n                fd.append(\"speak\",this.speak)\r\n\r\n                this.$http.put(\"/api/register/modify\" , fd).then(\r\n\r\n                    res=>{\r\n                        if (res.data.status == 1){\r\n                            this.$message.success(res.data.message)\r\n                        }else {\r\n                            this.$message.error(res.data.message)\r\n                        }\r\n                    }\r\n\r\n                )\r\n\r\n            },\r\n\r\n            openDialog(){\r\n\r\n                this.queryCondition.checkName = ''\r\n                this.queryCondition.checkCode = ''\r\n                this.openDialogFlag = true\r\n\r\n                this.getCheckList()\r\n\r\n            },\r\n\r\n\r\n\r\n            getCheckList(){\r\n\r\n                this.$http.get('/api/check/listAll' , {params: this.queryCondition}).then(\r\n\r\n                    res=>{\r\n                        this.checkListDialog  = res.data.data.checkList\r\n                    }\r\n\r\n                )\r\n\r\n            },\r\n\r\n            clear(){\r\n\r\n                this.queryCondition.checkName = ''\r\n                this.queryCondition.checkCode = ''\r\n\r\n                this.checkListDialog = []\r\n\r\n            },\r\n\r\n            async addCheck(){\r\n\r\n                if (this.checkList.length == 0){\r\n                    this.$message.error('至少要选择一个检查项目')\r\n                    return\r\n                }\r\n\r\n                let checkIds = ''\r\n\r\n                this.checkList.forEach(check =>{\r\n                    checkIds += check.checkId + ','\r\n                })\r\n\r\n                checkIds = checkIds.substring(0,checkIds.length-1)\r\n\r\n\r\n\r\n                const result = await this.$confirm('是否确认开具检查', '开具确认').catch(()=>{})\r\n\r\n                if (result == 'confirm'){\r\n\r\n                    let fd = new FormData();\r\n                    fd.append(\"registerId\",this.register.registerId)\r\n                    fd.append(\"checkIds\",checkIds)\r\n\r\n                    this.$http.post('/api/request/add',fd).then(\r\n                        res=>{\r\n                            if (res.data.status == 1){\r\n                                this.$message.success(res.data.message)\r\n                                this.checkList = []\r\n                            }else {\r\n                                this.$message.error(res.data.message)\r\n                            }\r\n\r\n\r\n                        }\r\n                    )\r\n\r\n                }\r\n\r\n\r\n            },\r\n\r\n            //将内层检查项目添加到外层\r\n            async addCheckDialog(){\r\n\r\n                const result = await this.$confirm('是否确定添加检查项目', '添加确认')\r\n\r\n                if (result == 'confirm'){\r\n                    this.checksDialog.forEach(check =>{\r\n                        let existFlag = false\r\n                        this.checkList.forEach(checkItem =>{\r\n                            if (checkItem.checkId == check.checkId){\r\n                                existFlag = true\r\n                            }\r\n                        })\r\n                        \r\n                        if (!existFlag){\r\n                            this.checkList.push(check)\r\n                        }\r\n                        \r\n                    })\r\n                }\r\n                this.openDialogFlag = false\r\n\r\n            },\r\n\r\n            handleSelectionChange(val){\r\n                this.checksDialog = val\r\n            },\r\n\r\n            async deleteCheck(checkId,checkName){\r\n                const result = await this.$confirm('是否确定删除【' + checkName + '】检查项目','删除确认')\r\n\r\n                if (result == 'confirm'){\r\n                    const  index = this.checkList.findIndex(check=>{\r\n                        return check.checkId == checkId\r\n                    })\r\n\r\n                    this.checkList.splice(index,1)\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        mounted(){\r\n\r\n\r\n\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-tag{\r\n        margin: 10px;\r\n    }\r\n    .button-update{\r\n        margin-left: 20px;\r\n    }\r\n\r\n    .add-button{\r\n        position: absolute;\r\n        right: 223px;\r\n    }\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}