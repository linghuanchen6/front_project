{"ast":null,"code":"export default {\n  //组件使用的数据\n  data() {\n    return {\n      deptPage: {},\n      queryCondition: {\n        deptName: '',\n        deptType: '',\n        currentPage: 1,\n        pageSize: 10\n      },\n      OpenDialog: false,\n      formData: {\n        deptId: 0,\n        deptName: '',\n        deptType: ''\n      },\n      formRules: {\n        deptName: [{\n          required: true,\n          message: '请输入科室名称',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '科室名称的长度不能超过十个字符',\n          trigger: 'blur'\n        }],\n        deptType: [{\n          required: true,\n          message: '请输入科室类型',\n          trigger: 'blur'\n        }, {\n          trigger: 'blur'\n        }]\n      },\n      actionType: '',\n      depts: []\n    };\n  },\n  //事件处理方法\n  methods: {\n    getDeptList() {\n      this.$http.get('/api/dept/list', {\n        params: this.queryCondition\n      }).then(res => {\n        console.log(res);\n        this.deptPage = res.data.data.deptPage;\n      });\n    },\n    add() {\n      this.formData = {};\n      this.actionType = '添加科室';\n      this.OpenDialog = true;\n    },\n    handleSizeChange(val) {\n      this.queryCondition.pageSize = val;\n      this.getDeptList();\n    },\n    handleCurrentChange(val) {\n      this.queryCondition.currentPage = val;\n      this.getDeptList();\n    },\n    handleSelectionChange(val) {\n      this.depts = val;\n    },\n    deleteBatch() {\n      let deptIds = '';\n      let deptNames = '';\n      this.depts.forEach(dept => {\n        deptIds += dept.deptId + ',';\n        deptNames += dept.deptName + ',';\n      });\n      deptIds = deptIds.substring(0, deptIds.length - 1);\n      deptNames = deptNames.substring(0, deptNames.length - 1);\n      const result = this.$confirm('是否确认删除【' + deptNames + '】', '删除确认', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        console.log(deptIds);\n        this.$http.delete('/api/dept/deleteBatch?deptIds=' + deptIds).then(res => {\n          if (res.data.status == 1) {\n            this.$message.success(res.data.message);\n            this.getDeptList();\n          } else {\n            this.$message.error(res.data.message);\n          }\n        });\n      }).catch(() => {});\n    },\n    addOrModify() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          if (this.actionType == '添加科室') {\n            this.$http.post('/api/dept/add', this.formData).then(res => {\n              if (res.data.status == 1) {\n                this.$message.success(res.data.message);\n                this.getDeptList();\n              } else {\n                this.$message.error(res.data.message);\n              }\n            });\n          } else {\n            this.$http.put('/api/dept/modify', this.formData).then(res => {\n              if (res.data.status == 1) {\n                this.$message.success(res.data.message);\n                this.getDeptList();\n              } else {\n                this.$message.error(res.data.message);\n              }\n            });\n          }\n          this.OpenDialog = false;\n        } else {\n          this.$message.error(\"输入数据有误，请检查后再提交\");\n        }\n      });\n    },\n    modify(deptId) {\n      this.$http.get('/api/dept/get/' + deptId).then(res => {\n        if (res.data.status == 1) {\n          this.formData = res.data.data.dept;\n          this.actionType = '修改科室';\n          this.OpenDialog = true;\n        } else {\n          this.$message.error(res.data.message);\n        }\n      });\n    },\n    remove(deptId, deptName) {\n      this.$confirm('是否确认删除【' + deptName + '】', '删除确认', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete('/api/dept/remove/' + deptId).then(res => {\n          if (res.data.status == 1) {\n            this.$message.success(res.data.message);\n            this.getDeptList();\n          } else {\n            this.$message.error(res.data.message);\n          }\n        });\n      }).catch(() => {});\n    }\n  },\n  //页面加载时\n  mounted() {\n    this.getDeptList();\n  }\n};","map":{"version":3,"names":["data","deptPage","queryCondition","deptName","deptType","currentPage","pageSize","OpenDialog","formData","deptId","formRules","required","message","trigger","max","actionType","depts","methods","getDeptList","$http","get","params","then","res","console","log","add","handleSizeChange","val","handleCurrentChange","handleSelectionChange","deleteBatch","deptIds","deptNames","forEach","dept","substring","length","result","$confirm","confirmButtonText","cancelButtonText","type","delete","status","$message","success","error","catch","addOrModify","$refs","formRef","validate","valid","post","put","modify","remove","mounted"],"sources":["src/views/data/Dept.vue"],"sourcesContent":["<template>\n  <div>\n\n    <!-- 面包屑导航 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{path: '/welcome'}\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>基础数据</el-breadcrumb-item>\n      <el-breadcrumb-item>科室管理</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片容器 -->\n    <el-card>\n\n      <el-input v-model=\"queryCondition.deptName\" placeholder=\"科室名称\" style=\"width: 250px\"></el-input>\n      <el-input v-model=\"queryCondition.deptType\" placeholder=\"科室类型\" style=\"width: 250px\"></el-input>\n      <el-button type=\"primary\" style=\"margin-left: 20px\" @click=\"getDeptList\">查询</el-button>\n      <el-button type=\"danger\" @click=\"deleteBatch\" >批量删除</el-button>\n      <el-button type=\"primary\"  @click=\"add\">添加科室</el-button>\n      <!-- 数据表格 -->\n      <el-table :data=\"deptPage.records\" style=\"width: 80%\" stripe border @selection-change=\"handleSelectionChange\">\n\n        <el-table-column type=\"selection\"/>\n        <el-table-column prop=\"deptId\" label=\"科室编号\">\n        </el-table-column>\n\n        <el-table-column prop=\"deptName\" label=\"科室名称\">\n        </el-table-column>\n\n        <el-table-column prop=\"deptType\" label=\"科室类型\">\n        </el-table-column>\n\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\" @click=\"modify(scope.row.deptId)\" ></el-button>\n            <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"remove(scope.row.deptId,scope.row.deptName)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryCondition.currentPage\"\n          :page-sizes=\"[2, 4, 5, 10]\"\n          :page-size=\"queryCondition.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"deptPage.total\">\n      </el-pagination>\n\n    </el-card>\n\n\n    <el-dialog :title=\"actionType\" :visible.sync=\"OpenDialog\" width=\"30%\" center>\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"formRef\">\n        <el-form-item label=\"科室名称\" label-width=\"100px\" :label-width=\"deptName\">\n          <el-input v-model=\"formData.deptName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"科室类型\" label-width=\"100px\" :label-width=\"deptType\">\n          <el-input v-model=\"formData.deptType\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"OpenDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addOrModify\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\n\nexport default{\n\n  //组件使用的数据\n  data(){\n    return{\n      deptPage:{},\n      queryCondition:{\n        deptName:'',\n        deptType:'',\n        currentPage:1,\n        pageSize:10,\n      },\n      OpenDialog:false,\n\n      formData:{\n        deptId:0,\n        deptName:'',\n        deptType:'',\n      },\n      formRules:{\n        deptName:[\n          { required:true, message:'请输入科室名称',trigger:'blur'},\n          { max:10, message: '科室名称的长度不能超过十个字符',trigger:'blur'}\n        ],\n\n        deptType:[\n          { required:true, message:'请输入科室类型',trigger:'blur'},\n          { trigger:'blur'}\n        ]\n      },\n      actionType:'',\n      depts:[],\n    }\n  },\n\n  //事件处理方法\n  methods: {\n    getDeptList(){\n      this.$http.get('/api/dept/list', {params:this.queryCondition}).then(\n          res => {\n            console.log(res)\n            this.deptPage = res.data.data.deptPage\n          }\n      )\n    },\n    add(){\n      this.formData={}\n\n      this.actionType='添加科室'\n\n      this.OpenDialog=true\n    },\n    handleSizeChange(val) {\n      this.queryCondition.pageSize = val;\n      this.getDeptList();\n    },\n    handleCurrentChange(val) {\n      this.queryCondition.currentPage = val;\n      this.getDeptList();\n    },\n\n    handleSelectionChange(val){\n      this.depts = val\n    },\n\n    deleteBatch(){\n\n      let deptIds = ''\n      let deptNames = ''\n\n      this.depts.forEach( dept => {\n        deptIds += dept.deptId + ','\n        deptNames += dept.deptName + ','\n      })\n\n      deptIds = deptIds.substring(0, deptIds.length - 1)\n      deptNames = deptNames.substring(0, deptNames.length - 1)\n\n      const result = this.$confirm(\n          '是否确认删除【' + deptNames + '】','删除确认',\n          {\n            confirmButtonText:'删除',\n            cancelButtonText:'取消',\n            type:'warning'\n          }\n      ).then(() => {\n        console.log(deptIds)\n        this.$http.delete('/api/dept/deleteBatch?deptIds='+deptIds).then(\n            res => {\n              if(res.data.status == 1){\n                this.$message.success(res.data.message)\n\n                this.getDeptList()\n              }else{\n                this.$message.error(res.data.message)\n              }\n            }\n        )\n      }).catch(() => {})\n    },\n    addOrModify(){\n      this.$refs.formRef.validate(\n          valid =>{\n            if(valid){\n              if(this.actionType=='添加科室'){\n                this.$http.post('/api/dept/add', this.formData).then(\n                    res => {\n                      if(res.data.status == 1){\n                        this.$message.success(res.data.message)\n\n                        this.getDeptList()\n                      }else{\n                        this.$message.error(res.data.message)\n                      }\n                    }\n                )\n              }else{\n                this.$http.put('/api/dept/modify', this.formData).then(\n                    res => {\n                      if(res.data.status == 1){\n                        this.$message.success(res.data.message)\n\n                        this.getDeptList()\n                      }else{\n                        this.$message.error(res.data.message)\n                      }\n                    }\n                )\n              }\n              this.OpenDialog= false\n            }else{\n              this.$message.error(\"输入数据有误，请检查后再提交\")\n            }\n          }\n      )\n    },\n    modify(deptId){\n      this.$http.get('/api/dept/get/'+deptId).then(\n          res => {\n            if(res.data.status == 1){\n              this.formData = res.data.data.dept;\n\n              this.actionType='修改科室';\n\n              this.OpenDialog=true;\n\n            }else{\n              this.$message.error(res.data.message)\n            }\n          }\n      )\n    },\n    remove(deptId, deptName){\n\n      this.$confirm(\n          '是否确认删除【'+deptName+'】','删除确认',\n          {\n            confirmButtonText:'删除',\n            cancelButtonText:'取消',\n            type:'warning'\n          }\n      ).then(() => {\n        this.$http.delete('/api/dept/remove/'+deptId).then(\n            res => {\n              if(res.data.status == 1){\n                this.$message.success(res.data.message)\n\n                this.getDeptList()\n              }else{\n                this.$message.error(res.data.message)\n              }\n            }\n        )\n      }).catch(() => {})\n    },\n  },\n\n  //页面加载时\n  mounted(){\n    this.getDeptList()\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}